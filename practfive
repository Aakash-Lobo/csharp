using System;
using System.Collections.Generic;
using System.Linq;
using System.Xml.Linq;
using System.Text;
using System.Threading.Tasks;


namespace CsharpPracs
{
    internal class linqxmldemo
    {
        static void Main()
        {
            //Read XML document
            XDocument pd = XDocument.Load("C:\\VisualStudio2022\\ClgPracs\\CsharpPracs\\CsharpPracs\\prod.xml");
            var products = pd.Elements(); //get in table format


            //Q1:Display product names with price which is less than 55000 rupees
            var ans1 = products.Elements("Product").Where(x => (int)x.Element("price") < 55000).Select(x => new { name = x.Element("pname").Value });


            System.Console.WriteLine("Products with price less than Rs 55000: ");


            foreach (var product in ans1)
            {
                Console.WriteLine("product.name: {0}", product.name);
                // Console.WriteLine($"product.name : {product.name}"); --alternate command
            }


            System.Console.WriteLine("********************************************************");


            //Q2: Display product with name manufactured after 10-07-2016
            var ans2 = products.Elements("Product").Where(x => (DateTime.ParseExact((string)x.Element("dom"), "dd-mm-yy", null)) > DateTime.ParseExact("10-07-16", "dd-mm-yy", null)).Select(x => new { name = x.Element("pname").Value, price = x.Element("price").Value, dom = x.Element("dom").Value });


            System.Console.WriteLine("Products which were manufactured after 10-07-16");
            foreach (var product in ans2)
            {
                Console.WriteLine("product.name: {0}, Price:{1},Dom:{2}", product.name, product.price, product.dom);
            }


            System.Console.WriteLine("********************************************************");


            //Q3. Display the name and cost of the product which has the maximum price.
            var ans3 = products.Elements("Product").Where(x => (int)x.Element("price") == products.Elements("Product").Max(x => (int)x.Element("price"))).Select(x => new { name = x.Element("pname").Value, cost = x.Element("price").Value });


            System.Console.WriteLine("Product with the maximum price: ");


            foreach (var product in ans3)
            {
                Console.WriteLine("product Name: {0} , Cost: {1}", product.name, product.cost);
            }


            System.Console.WriteLine("********************************************************");


            //Q4. Display the product which is SonyTV and dom is > 04-09-15
            var ans4 = products.Elements("Product").Where(x => (string)x.Element("pname") == "SonyTV" && (DateTime.ParseExact((string)x.Element("dom"), "dd-mm-yy", null)) >
            DateTime.ParseExact("04-09-15", "dd-mm-yy", null)).Select(x => new { name = x.Element("pname").Value, price = x.Element("price").Value, dom = x.Element("dom").Value });


            System.Console.WriteLine("Products which are SonyTV and were manufactured after 04-09-15");
            foreach (var product in ans4)
            {
                Console.WriteLine("product.name: {0}, Price:{1},Dom:{2}", product.name, product.price, product.dom);
            }


            System.Console.WriteLine("********************************************************");


            //Q5. Find the revenue generated by Iphone products selling
            var ans5 = products.Elements("Product")
    .Any()
    ? products.Elements("Product")
        .Where(x => (string)x.Element("pname")?.Value == "Iphone")
        .Sum(x => decimal.Parse(x.Element("price").Value))
    : 0;
            System.Console.WriteLine("Revenue generated by Iphone products selling: " + ans5);


            System.Console.WriteLine("********************************************************");
        }
    }
}


prod.xml
<?xml version="1.0" encoding="utf-8" ?>
<Products>
    <Product>
        <pid>100</pid>
        <pname>Iphone</pname>
        <price>60000</price>
        <dom>09-07-14</dom>
    </Product>
    <Product>
        <pid>101</pid>
        <pname>SonyTV</pname>
        <price>70000</price>
        <dom>21-09-16</dom>
    </Product>
    <Product>
        <pid>102</pid>
        <pname>Iphone</pname>
        <price>90000</price>
        <dom>09-07-22</dom>
    </Product>
    <Product>
        <pid>103</pid>
        <pname>Dell Laptop</pname>
        <price>75000</price>
        <dom>09-10-14</dom>
    </Product>
    <Product>
        <pid>104</pid>
        <pname>Lenovo Laptop</pname>
        <price>40000</price>
        <dom>09-06-18</dom>
    </Product>
    <Product>
        <pid>105</pid>
        <pname>SonyTV</pname>
        <price>55000</price>
        <dom>11-02-14</dom>
    </Product>
    <Product>
        <pid>106</pid>
        <pname>Samsung Galaxy</pname>
        <price>35000</price>
        <dom>15-07-13</dom>
    </Product>
    <Product>
        <pid>107</pid>
        <pname>Azure Laptop</pname>
        <price>78000</price>
        <dom>26-12-14</dom>
    </Product>
    <Product>
        <pid>108</pid>
        <pname>Dell PC</pname>
        <price>85000</price>
        <dom>09-09-14</dom>
    </Product>
    <Product>
        <pid>109</pid>
        <pname>MSI Laptop</pname>
        <price>60000</price>
        <dom>15-10-17</dom>
    </Product>
</Products>
